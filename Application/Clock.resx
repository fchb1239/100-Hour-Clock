<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        4cPgD+EH8H/+D/gf+B/8AYA//gAAf/+AAf8=
</value>
  </data>
</root>